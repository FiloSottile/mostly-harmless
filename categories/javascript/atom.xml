<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | PyTux]]></title>
  <link href="http://filosottile.github.com/categories/javascript/atom.xml" rel="self"/>
  <link href="http://filosottile.github.com/"/>
  <updated>2013-10-26T19:15:27-04:00</updated>
  <id>http://filosottile.github.com/</id>
  <author>
    <name><![CDATA[Filippo Valsorda]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Krumiro - send a message to all your Facebook friends]]></title>
    <link href="http://filosottile.github.com/krumiro-send-a-message-to-all-your-facebook-friends/"/>
    <updated>2012-12-22T19:20:00-05:00</updated>
    <id>http://filosottile.github.com/krumiro-send-a-message-to-all-your-facebook-friends</id>
    <content type="html"><![CDATA[<blockquote>
  <p><strong>Disclamer</strong>: this code is published without any guarantee, and <strong>the author is not responsible for any use or consequence deriving from its use</strong>.
By using it you are accepting this and you accept not to consider the author liable for your use.</p>

  <p>For the technically inclined, it’s all under <a href="http://filosottile.mit-license.org">MIT License</a>.</p>
</blockquote>

<p>This is a simple script allowing you to send a message to all your Facebook friends.</p>

<h3 id="features">Features</h3>
<ul>
  <li>Different messages for male and female friends;</li>
  <li>Replace <code>%name</code> with the name of the recipient in the messages (like <code>Hi %name! ...</code>);</li>
  <li>Configurable time to wait between a message and the next, with total duration prediction;</li>
  <li>List of friends to exclude.</li>
</ul>

<p>If you have any request or suggestion, simply leave a comment.</p>

<h3 id="installation">Installation</h3>
<ul>
  <li>Drag this “<a href="javascript:(function(d){var js, ref = d.getElementsByTagName('script')[0];js = d.createElement('script'); js.async = true;js.src = 'https://gist.github.com/raw/4215248/krumiro_en.js';ref.parentNode.insertBefore(js, ref);}(document));">Krumiro</a>” to your bookmarks bar;</li>
  <li>Done! Now the Krumiro button is ready.</li>
</ul>

<h3 id="use">Use</h3>
<ul>
  <li>While on a Facebook page, simply click it;</li>
  <li>Some windows asking you what to do will show up;</li>
  <li>The page will freeze until the script has finished, go grab a coffee, and maybe <a href="https://www.twitter.com">follow me on Twitter</a>.
<!-- more --></li>
</ul>

<h3 id="code-for-the-curious---its-ugly">Code (for the curious - it’s ugly)</h3>
<p>{% gist 4215248 krumiro_en.js %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Taking Retina screenshots with PhantomJS]]></title>
    <link href="http://filosottile.github.com/taking-retina-screenshots-with-phantomjs/"/>
    <updated>2012-05-12T16:44:00-04:00</updated>
    <id>http://filosottile.github.com/taking-retina-screenshots-with-phantomjs</id>
    <content type="html"><![CDATA[<p>With <a href="http://phantomjs.org">PhantomJS</a>, a headless WebKit browser with Javascript API, you can automatically render a webpage like you see it on your screen in an image or PDF. This is an awesome feature, useful for testing or - that’s what I use it for - rendering some elements of the page as images for later use.</p>

<p>Here I will explain how to take Retina-like screenshots. These are screenshots with double width and height for the same element where the details are rendered with double the precision. There are different reasons to want that: you might not own a new iPad or an iPhone4* and want to see how your website would look on these devices or you might want to add a Retina unit test to your awesome test stack. I want to render text to images so that they will still look sharp on Retina screens when used as replacements.</p>

<p>The key is the CSS3 <a href="http://www.w3schools.com/css3/css3_2dtransforms.asp"><code>transform</code></a> property and its <code>scale(2)</code> value, plus a couple of tweaks.
<!--more-->
Here is a modified version of the rasterize.js example to output Retina screenshots.
{% gist 2667199 rasterize.js %}</p>

<h3 id="bonus">Bonus</h3>
<p>You might want to render only a single element, for example your content div or your always-buggy sidebar, to an image.<br />
Well, have a look at <a href="https://developer.mozilla.org/en/DOM/element.getBoundingClientRect"><code>element.getBoundingClientRect</code></a> (<a href="http://ejohn.org/blog/getboundingclientrect-is-awesome/">getBoundingClientRect is Awesome</a>) and PhantomJS <a href="https://github.com/ariya/phantomjs/wiki/API-Reference#wiki-webpage-clipRect"><code>page.clipRect</code></a>.</p>

<p>Here is a spoiler ;)
{% gist 2667279 gistfile1.js %}</p>

<h3 id="references">References</h3>
<ul>
  <li><a href="http://fcargoet.evolix.net/2012/01/use-phantomjs-to-take-screenshots-of-you-webapp-for-you/">Use PhantomJS to take screenshots of your webapp for you</a> - /home/florian</li>
  <li><a href="https://github.com/ariya/phantomjs/wiki/Screen-Capture">Rendering QuickStart example</a> - PhantomJs Wiki</li>
  <li><a href="https://github.com/ariya/phantomjs/wiki/API-Reference#wiki-webpage-render"><code>render()</code> API reference</a> </li>
</ul>

]]></content>
  </entry>
  
</feed>
