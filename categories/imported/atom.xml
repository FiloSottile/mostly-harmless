<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: imported | PyTux]]></title>
  <link href="http://filosottile.github.com/categories/imported/atom.xml" rel="self"/>
  <link href="http://filosottile.github.com/"/>
  <updated>2013-10-26T19:15:27-04:00</updated>
  <id>http://filosottile.github.com/</id>
  <author>
    <name><![CDATA[Filippo Valsorda]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Taking Retina screenshots with PhantomJS]]></title>
    <link href="http://filosottile.github.com/taking-retina-screenshots-with-phantomjs/"/>
    <updated>2012-05-12T16:44:00-04:00</updated>
    <id>http://filosottile.github.com/taking-retina-screenshots-with-phantomjs</id>
    <content type="html"><![CDATA[<p>With <a href="http://phantomjs.org">PhantomJS</a>, a headless WebKit browser with Javascript API, you can automatically render a webpage like you see it on your screen in an image or PDF. This is an awesome feature, useful for testing or - thatâ€™s what I use it for - rendering some elements of the page as images for later use.</p>

<p>Here I will explain how to take Retina-like screenshots. These are screenshots with double width and height for the same element where the details are rendered with double the precision. There are different reasons to want that: you might not own a new iPad or an iPhone4* and want to see how your website would look on these devices or you might want to add a Retina unit test to your awesome test stack. I want to render text to images so that they will still look sharp on Retina screens when used as replacements.</p>

<p>The key is the CSS3 <a href="http://www.w3schools.com/css3/css3_2dtransforms.asp"><code>transform</code></a> property and its <code>scale(2)</code> value, plus a couple of tweaks.
<!--more-->
Here is a modified version of the rasterize.js example to output Retina screenshots.
{% gist 2667199 rasterize.js %}</p>

<h3 id="bonus">Bonus</h3>
<p>You might want to render only a single element, for example your content div or your always-buggy sidebar, to an image.<br />
Well, have a look at <a href="https://developer.mozilla.org/en/DOM/element.getBoundingClientRect"><code>element.getBoundingClientRect</code></a> (<a href="http://ejohn.org/blog/getboundingclientrect-is-awesome/">getBoundingClientRect is Awesome</a>) and PhantomJS <a href="https://github.com/ariya/phantomjs/wiki/API-Reference#wiki-webpage-clipRect"><code>page.clipRect</code></a>.</p>

<p>Here is a spoiler ;)
{% gist 2667279 gistfile1.js %}</p>

<h3 id="references">References</h3>
<ul>
  <li><a href="http://fcargoet.evolix.net/2012/01/use-phantomjs-to-take-screenshots-of-you-webapp-for-you/">Use PhantomJS to take screenshots of your webapp for you</a> - /home/florian</li>
  <li><a href="https://github.com/ariya/phantomjs/wiki/Screen-Capture">Rendering QuickStart example</a> - PhantomJs Wiki</li>
  <li><a href="https://github.com/ariya/phantomjs/wiki/API-Reference#wiki-webpage-render"><code>render()</code> API reference</a> </li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Send a HEAD request in Python]]></title>
    <link href="http://filosottile.github.com/send-a-head-request-in-python/"/>
    <updated>2012-03-18T17:53:00-04:00</updated>
    <id>http://filosottile.github.com/send-a-head-request-in-python</id>
    <content type="html"><![CDATA[<p>There are a lot of questions on this topic around the web and common answers are to use <code>httplib</code>, that however is a really-low level library, or to use <code>urllib2</code>, but a lot of people complains about it returning to <code>GET</code> if following a redirect.</p>

<p>Here is my <code>urllib2</code> solution, written looking at the code of <code>urllib2.HTTPRedirectHandler</code> and subclassing it in order to make it keep using the <code>HeadRequest</code>.</p>

<p>{% gist 2077204 HEAD-request.py %}</p>

<p>For example, here is a fast URL un-shortener (redirect follower) realized with the method above (and a fallback).</p>

<p>{% gist 2077115 redirect-follower.py %}</p>
]]></content>
  </entry>
  
</feed>
