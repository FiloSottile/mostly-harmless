Events are fetched from many sources. In the past, streaming APIs; now, home
timelines for users we have tokens for; soon, user timelines and mentions; in
the future, probably lists on a dedicaated account, maybe webhooks and search.

Any event involving private tweets is dropped on the floor.

All events are stored as raw JSON in the Messages SQLite table with information
about their source. Some basic deduplication is done application-side based on
the JSON hash.

Note: some early events with .synthetic = 1 were originally only stored as
tweets, and events before 26347dc were re-marshalled from the Go representation,
so they lack some extra fields.

Events are processed to generate useful derived tables like Tweets and Users. At
that time, images are fetched and stored in the Media table.

TODO: storing images in the same db as metadata does not scale well (*cough*
600GB SQLite db regrets *cough*). Let's put the images on the filesystem.

Messages and Media are the only authoritative tables. All others can be
regenerated by rerunning the process step on all events. rescan should take no
more than a few seconds at all times.
